package com.example.Desafio_4;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Time;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Scanner;

import org.joda.time.DateTime;
import org.joda.time.Hours;

import com.example.entities.Hora;

/**
 * Hello world!
 *
 */
public class App 
{
    public static void main( String[] args )
    {
    	
    	List<Hora> list = new ArrayList<Hora>();
		
		System.out.println("Selecione a fonte dos Dados:");
		System.out.println("1 Arquivo .txt");
		System.out.println("2 Banco de Dados");
		
		Scanner s = new Scanner(System.in);
		
		int escolha = Integer.parseInt(s.next());
				
			    if(escolha == 1) {
					//Iniciando leitura do arquivo
			    	
			    	//Caminho do arquivo
					String path = ".\\Dados\\in.txt";
			    	
					try (BufferedReader br = new BufferedReader(new FileReader(path))) {
						
						String line = br.readLine();
						while (line != null) {
							
							Hora hora = new Hora();
							
							String[] vect = line.split(",");
							hora.setHoraInicio(vect[0]);
							hora.setHoraTermino(vect[1]);
							
							list.add(hora);
							
							line = br.readLine();
						}
						
						for(Hora h : list) {
							System.out.println(h.getHoraInicio() + "," +  h.getHoraTermino());
						}
						
					} catch (IOException e) {
						System.out.println("Error: " + e.getMessage());
					}
			    }
			    /*
			    else if(escolha == 2) {
			    		    	
			    		//Iniciado busca no Banco de dados
						try {
							Connection conexao = DriverManager.getConnection("jdbc:postgresql://localhost:5432/desafioCNI_3",
									"postgres", "123");
							if(conexao != null) {
								System.out.println("Conectado!");
								Statement stm = conexao.createStatement();	
								String sql = "SELECT name, qtdcomprada\r\n"
										+ "	FROM cliente;";
								try {
									ResultSet result = stm.executeQuery(sql);
									while (result.next()) {
										System.out.println(result.getString("name") + "," + result.getDouble("qtdcomprada"));
										
										Cliente cli = new Cliente();
										cli.setNome(result.getString("name"));
										cli.setQtdComprada(result.getDouble("qtdcomprada"));
										
										list.add(cli);
										
									}
								} catch (SQLException e) {
									e.printStackTrace();
								}
							} else {
								System.out.println("Conexão falhou!");
							}
						} catch (SQLException e) {
							e.printStackTrace();
						}
			    }*/
				
				//Iniciando geração de arquivo		
				String pathOut = ".\\Dados\\out.txt";
				
				try (PrintWriter pw = new PrintWriter(new File(pathOut))) {
					
					pw.println("Núm. Partida" + "|" +  "Início" + "|" + "Término" + "|" + "Tempo Total");
					int numPartida = 1;
					Double horaInicio = 0.0;
					Double horaTermino = 0.0;
					String horaFinal = null;
					
					for(Hora h : list) {
						
						String[] hors1 = h.getHoraInicio().split(":");
						
						horaInicio = horaInicio + Double.parseDouble(hors1[0])*60;
						horaInicio = horaInicio + Double.parseDouble(hors1[1]);
						
						String[] hors2 = h.getHoraTermino().split(":");
						
						horaTermino = horaTermino + Double.parseDouble(hors2[0])*60;
						horaTermino = horaTermino + Double.parseDouble(hors2[1]);
						
						Double diff = horaTermino-horaInicio;
						String diferenca = String.valueOf(diff/60);
						
						String[] hors3 = diferenca.split(".");
						
						double calculoMinutos = 0.0;
						horaFinal = hors3[0]+":"+((calculoMinutos = Double.parseDouble(hors3[1])*75)/100);
						
						pw.println((numPartida++) + "           " +  h.getHoraInicio() + "            " + h.getHoraTermino() + "            " + horaFinal );
						
					}
					
				} 
				catch (FileNotFoundException e) {
					System.out.println("Error: " + e.getMessage());
				}
    }
}
